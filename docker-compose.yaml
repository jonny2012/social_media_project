
services:
  api:
    build:
      context: ./server
      dockerfile: dockerfile
    container_name: server
    ports:
      - "5000:5000"
      - "5003:5003"
      #добавить при запуске env
    # env_file:
    #   - .env
    # depends_on:
    #   - mongo
    # volumes:
    #   - ./server/.env:/app/server/.env

  frontichgram:
    build:
      context: ./client
      dockerfile: dockerfile
    container_name: client
    ports:
      - "3000:3000"
    #  env_file:
    #   - .env
    # depends_on:
    #   - mongo
    # volumes:
    #   - ./client/.env:/app/client/.env


#  mongo-database:
#     container_name: mongo-database
#     image: mongo:7
#     restart: always
#     ports:
#       - 27017:27017
#     command: --auth --bind_ip 0.0.0.0
#     environment:
#        MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
#        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
#        MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
#     env_file:
#       - .env
#     volumes:
#       - ./data/db:/data/db

# volumes:
#   mongo-data:


#   healthcheck:
#       test: ["CMD", "curl","-XGET", "localhost:9200/_cluster/health?wait_for_status=yellow&timeout=650s&pretty"]
#       interval: 30s
#       timeout: 5m
#       retries: 30

# depends_on:
#       elasticsearch:
#           condition: service_healthy